@use "sass:math";
/*buiding Breakpoints, dimension, container, row, column, ...*/
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
);

$grid-columns: 12;
$grid-gutter-width: 30px;

%gutter-padding {
  padding-left: math.div($grid-gutter-width, 2);
  padding-right: math.div($grid-gutter-width, 2);
}

.container-fluid {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  @extend %gutter-padding;
}

.container {
  @extend .container-fluid;
}

/*-----ROW-----*/
.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -(math.div($grid-gutter-width, 2));
  margin-right: -(math.div($grid-gutter-width, 2));

  &[class*="row-cols-"] > *,
  [class*="col-"] {
    flex: 0 0 auto;
    @extend %gutter-padding;
  }
}

/*-----COLUMN-----*/
.col {
  flex: 1 0;
  @extend %gutter-padding;
}

@mixin make-media-query($dimension, $bypass: false) {
  @if $bypass {
    @content;
  } @else {
    @media (min-width: $dimension) {
      @content;
    }
  }
}

@mixin make-row-columns($infix) {
  @for $i from 1 through $grid-columns * 0.5 {
    .row-cols#{$infix}-#{$i} > * {
      width: math.div(100%, $i);
    }
  }
}

@mixin make-column($infix) {
  @for $i from 1 through $grid-columns {
    .col#{$infix}-#{$i} {
      width: math.div(100%, $grid-columns) * $i;
    }
  }
}

@mixin make-offsets($infix) {
  @for $i from 0 to $grid-columns {
    .offset#{$infix}-#{$i} {
      margin-left: if($i>0, math.div(100%, $grid-columns) * $i, 0);
    }
  }
}

@each $breakpoint, $dimension in $grid-breakpoints {
  $max-width: map-get($container-max-widths, $breakpoint);
  $this-xs: $breakpoint == xs;
  $infix: if($this-xs, "", "-#{$breakpoint}");

  @include make-media-query($dimension, $this-xs) {
    .container {
      max-width: $max-width;
    }

    @include make-row-columns($infix);

    @include make-column($infix);

    @include make-offsets($infix);
  }
}

/*row-col-*, offset-*, g-*, gx-*, gy-*/
